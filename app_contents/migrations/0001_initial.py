# Generated by Django 4.0.3 on 2022-03-18 08:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassMeet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live_video', models.FileField(upload_to='app/uploads/faculties/meet/videos')),
                ('topic_name', models.CharField(max_length=150)),
                ('desc', models.TextField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_type', models.CharField(choices=[('TOPIC_LINKS', 'TOPIC_LINKS'), ('NORMAL', 'NORMAL'), ('REDIRECT_LINK', 'REDIRECT_LINK')], max_length=300)),
                ('link_name', models.TextField()),
                ('link_desc', models.TextField(blank=True, null=True)),
                ('update_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectDocx',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='app/uploads/faculties/subjects/contents/files')),
                ('file_name', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='app/uploads/faculties/subjects/contents/images')),
                ('image_name', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='SubjectVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(null=True, upload_to='app/uploads/faculties/subjects/contents/videos')),
                ('video_name', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_no', models.IntegerField(null=True)),
                ('topic_name', models.TextField()),
                ('update_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('files', models.ManyToManyField(to='app_contents.subjectdocx')),
                ('images', models.ManyToManyField(to='app_contents.subjectimage')),
                ('links', models.ManyToManyField(to='app_contents.link')),
                ('videos', models.ManyToManyField(to='app_contents.subjectvideo')),
            ],
        ),
        migrations.CreateModel(
            name='VideoThumbnails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_img', models.ImageField(blank=True, null=True, upload_to='app/uploads/faculties/class_on_meet/thumb_img')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('thumbnails', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_contents.classmeet')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('unit_no', models.IntegerField(null=True)),
                ('completed', models.BooleanField(default=False, null=True)),
                ('topics', models.ManyToManyField(to='app_contents.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('subject_status', models.IntegerField(blank=True, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='app/uploads/faculties/subjects/images')),
                ('desc', models.TextField(blank=True, null=True)),
                ('units', models.ManyToManyField(blank=True, to='app_contents.unit')),
            ],
        ),
        migrations.CreateModel(
            name='StudentChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('chat_img', models.ImageField(blank=True, null=True, upload_to='app/chat_system/students/chat_images')),
                ('chat_doc', models.FileField(blank=True, null=True, upload_to='app/chat_system/students/chat_docx')),
                ('student_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('batch', models.IntegerField(blank=True, null=True)),
                ('performance', models.CharField(blank=True, max_length=200, null=True)),
                ('chat_activities', models.ManyToManyField(to='app_contents.studentchat')),
                ('recent_lectures', models.ManyToManyField(to='app_contents.subjectvideo')),
                ('recent_links', models.ManyToManyField(to='app_contents.link')),
                ('recent_pdfs', models.ManyToManyField(to='app_contents.subjectdocx')),
                ('student_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('option_A', models.TextField()),
                ('option_B', models.TextField()),
                ('option_C', models.TextField(blank=True, null=True)),
                ('option_D', models.TextField(blank=True, null=True)),
                ('right', models.BooleanField(default=False, null=True)),
                ('wrong', models.BooleanField(default=False, null=True)),
                ('quize_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('faculty_host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('quiz_of_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('quiz_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_contents.subject')),
            ],
        ),
        migrations.AddField(
            model_name='link',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app_contents.subject'),
        ),
        migrations.CreateModel(
            name='FacultyChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('chat_img', models.ImageField(blank=True, null=True, upload_to='app/chat_system/faculties/chat_images')),
                ('chat_doc', models.FileField(blank=True, null=True, upload_to='app/chat_system/faculties/chat_docx')),
                ('faculty_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subjects', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_contents.subject')),
                ('topics', models.ManyToManyField(to='app_contents.topic')),
            ],
        ),
        migrations.AddField(
            model_name='classmeet',
            name='on_subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_contents.subject'),
        ),
        migrations.AddField(
            model_name='classmeet',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='student_participants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ClassActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_chats', models.ManyToManyField(to='app_contents.studentchat')),
                ('links', models.ManyToManyField(to='app_contents.link')),
                ('student_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('topics', models.ManyToManyField(to='app_contents.topic')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='app/uploads/students/docs/%y/%m/%d', verbose_name='assignment_file')),
                ('file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('desc', models.TextField(blank=True, null=True)),
                ('submitted', models.BooleanField(default=False)),
                ('related_to_sub', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_contents.subject')),
                ('student_submit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textAnswer', models.TextField()),
                ('charAnswer', models.CharField(max_length=200)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_contents.quiz')),
            ],
        ),
    ]
